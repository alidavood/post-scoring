# Generated by Django 4.2 on 2024-05-17 12:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('context', models.TextField(blank=True, null=True, verbose_name='Context')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='UserPostScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Score')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='blog.post', verbose_name='Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Post Score',
                'verbose_name_plural': 'User Post Scores',
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserPostScoreHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Score')),
                ('user_post_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summited_scores', to='blog.userpostscore', verbose_name='User Post Score')),
            ],
            options={
                'verbose_name': 'User Post Score History',
                'verbose_name_plural': 'User Post Scores History',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='user_scores',
            field=models.ManyToManyField(related_name='post_scores', through='blog.UserPostScore', to=settings.AUTH_USER_MODEL, verbose_name='User scores'),
        ),
    ]
